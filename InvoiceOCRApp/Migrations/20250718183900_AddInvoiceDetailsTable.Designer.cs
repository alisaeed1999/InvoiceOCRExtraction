// <auto-generated />
using System;
using InvoiceOCRApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InvoiceOCRApp.Migrations
{
    [DbContext(typeof(InvoiceAppContext))]
    [Migration("20250718183900_AddInvoiceDetailsTable")]
    partial class AddInvoiceDetailsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvoiceOCRApp.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Customername")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("customername");

                    b.Property<DateOnly?>("Invoicedate")
                        .HasColumnType("date")
                        .HasColumnName("invoicedate");

                    b.Property<string>("Invoicenumber")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("invoicenumber");

                    b.Property<decimal?>("Totalamount")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("totalamount");

                    b.Property<decimal?>("Vat")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("vat");

                    b.HasKey("Id")
                        .HasName("invoices_pkey");

                    b.ToTable("invoices", (string)null);
                });

            modelBuilder.Entity("InvoiceOCRApp.Models.Invoicedetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("Invoiceid")
                        .HasColumnType("integer")
                        .HasColumnName("invoiceid");

                    b.Property<decimal?>("Linetotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("linetotal");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("Unitprice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("unitprice");

                    b.HasKey("Id")
                        .HasName("invoicedetails_pkey");

                    b.HasIndex("Invoiceid");

                    b.ToTable("invoicedetails", (string)null);
                });

            modelBuilder.Entity("InvoiceOCRApp.Models.Invoicedetail", b =>
                {
                    b.HasOne("InvoiceOCRApp.Models.Invoice", "Invoice")
                        .WithMany("Invoicedetails")
                        .HasForeignKey("Invoiceid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("invoicedetails_invoiceid_fkey");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("InvoiceOCRApp.Models.Invoice", b =>
                {
                    b.Navigation("Invoicedetails");
                });
#pragma warning restore 612, 618
        }
    }
}
